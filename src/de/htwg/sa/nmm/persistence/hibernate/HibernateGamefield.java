package de.htwg.sa.nmm.persistence.hibernate;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import de.htwg.sa.nmm.model.IGamefield;
import de.htwg.sa.nmm.model.impl.Gamefield;

/**
 * {@link Gamefield} class with Hibernate Annotations
 * 
 * @author Patrick Schmidt
 * @since 2016-04-05
 */
@Entity
@Table(name = "GAME")
public class HibernateGamefield implements Serializable {

	/**
	 * Serial Version ID
	 */
	private static final long serialVersionUID = 6474755332679443051L;

	/**
	 * Autogenerated Id for Hibernate
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id")
	private int id;

	/**
	 * Name of the Game. Needed to identify the game in db4o database
	 */
	@Column(name = "name")
	String name = "";

	/**
	 * Field matrix to address the specific positions
	 */
	@OneToOne
	@JoinColumn(name = "field")
	HibernateField[][] gamefield = null;

	/**
	 * Variable to store player1
	 */
	@OneToOne
	@JoinColumn(name = "player_one")
	HibernatePlayer player1;

	/**
	 * Variable to store player2
	 */
	@OneToOne
	@JoinColumn(name = "player_two")
	HibernatePlayer player2;

	/**
	 * Default Constructor for Hibernate
	 */
	public HibernateGamefield() {

	}

//	static HibernateGamefield transformToHibernate(IGamefield gamefield) {
//		HibernateGamefield game = new HibernateGamefield();
//
//		game.name = gamefield.getName();
//		// game.gamefield = gamefield.get
//		game.player1 = HibernatePlayer.transformToHibernate(gamefield.getCurrentPlayer());
//		game.player2 = HibernatePlayer.transformToHibernate(gamefield.getOtherPlayer());
//		
//	}

}
