package de.htwg.sa.nmm.persistence.hibernate;

import java.io.Serializable;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.ManyToOne;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import de.htwg.sa.nmm.model.IField;
import de.htwg.sa.nmm.model.impl.Field;

/**
 * Field class for Hibernate
 * 
 * @author Patrick Schmidt
 * @since 2016-04-12
 */
@Entity
@Table(name = "Hibernate_TEST3")
public class HibernateField implements Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;

	/**
	 * Autogenerated Id for Hibernate
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)
	@Column(name = "id")
	private int id;
	
	/**
	 * Number of Grid
	 */
	@Column(name = "grid")
	int grid;

	/**
	 * Index of Grid
	 */
	@Column(name = "index")
	int index;
	
	/**
	 * MatrixRow 
	 */
	@ManyToOne
	HibernateMatrixRow matrixRow;

	/**
	 * placed token
	 */
	@OneToOne(mappedBy = "field")
	HibernateToken token;
	

	static HibernateField transformToHibernate(IField field) {
		HibernateField f = new HibernateField();
		
		f.grid = field.grid();
		f.index = field.index();
		f.token = HibernateToken.transformToHibernate(field.getToken());
		
		return f;
	}
	
	static IField transformFromHibernate(HibernateField field) {
		Field f = new Field(field.grid, field.index);
		
		f.setToken(HibernateToken.transformFromHibernate(field.token));
		
		return f;
	}
}
